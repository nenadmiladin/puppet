The Nautilus DevOps team was auditing some of the applications running on all app servers in Stratos Datacenter. 
They found some security loop holes like they observed there is no firewall installed on these apps. 
So team has decided to install firewalld on all app servers and also some rules need to be added. 
This task needs to be done using Puppet so as per details mentioned below please compete the task:
Create an inventory file site.pp under /etc/puppetlabs/code/environments/production/manifests directory on puppet master node i.e on Jump Server. 
In this inventory file you need to define nodes specific classes only which are mentioned below.
1.	Define a class firewall_node1 for agent node 1 i.e app server 1, firewall_node2 for agent node 2 i.e app server 2, firewall_node3 and for agent node3 i.e app server
Also create a puppet programming file blog.pp under /etc/puppetlabs/code/environments/production/manifests directory on puppet master node i.e on Jump Server and write code to perform below mention task.
1.	Install puppet firewall module on master node i.e on Jump Server (you can install manually).
2.	There are some different applications running on all three apps. One of the application is using port 8086 on App server 1 , 5009 on App server 2 and 8095 on App server 3. 
Complete below mentioned tasks:
a. Open all incoming connection for 8086/tcp port on App Server 1 and zone should be public.
b. Open all incoming connection for 5009/tcp port on App Server 2 and zone should be public.
c. Open all incoming connection for 8095/tcp port on App Server 3 and zone should be public.
Note: Please do not add firewall rich rules.

root@jump_host /etc/puppetlabs/code/environments/production/manifests# cat site.pp
node 'stapp01.stratos.xfusioncorp.com' {
  include firewall_node1
}

node 'stapp02.stratos.xfusioncorp.com' {
  include firewall_node2
}

node 'stapp03.stratos.xfusioncorp.com' {
  include firewall_node3
}

=====================================================================
root@jump_host /etc/puppetlabs/code/environments/production/manifests# cat blog.pp
class { 'firewalld': }

class firewall_node1 {
  firewalld_port { 'Open port 8086 in the public zone':
    ensure   => present,
    zone     => 'public',
    port     => 8086,
    protocol => 'tcp',  }
}


class firewall_node2 {
  firewalld_port { 'Open port 5009 in the public zone':
    ensure   => present,
    zone     => 'public',
    port     => 5009,
    protocol => 'tcp',
  }
}

class firewall_node3 {
  firewalld_port { 'Open port 8095 in the public zone':
    ensure   => present,
    zone     => 'public',
    port     => 8095,
    protocol => 'tcp',
  }
}
